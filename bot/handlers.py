import logging

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from keyboards import menu_keyboard, table_keyboard

router = Router()

logging.basicConfig(level=logging.INFO)

booked_tables = {}

@router.message(F.text == "–ö–∞—Ä—Ç–∞ —Å—Ç–æ–ª–æ–≤")
async def send_table_map(message: Message):
    logging.info("–í—ã–∑–≤–∞–Ω send_table_map")
    photo = FSInputFile("images/table_map.jpg")
    await message.answer_photo(photo, caption="–°—Ö–µ–º–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å—Ç–æ–ª–æ–≤.")


@router.message(F.text == "–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è")
async def send_rules(message: Message):
    logging.info("–í—ã–∑–≤–∞–Ω send_rules")
    rules_text = """
    üìú –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:

    1. –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∞:
       - –í—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2 —á–∞—Å–∞. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –±—Ä–æ–Ω—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∑–∞—Ä–∞–Ω–µ–µ.
       - –ë—Ä–æ–Ω—å —Å–Ω–∏–º–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª–∏ –æ –∑–∞–¥–µ—Ä–∂–∫–µ.

    2. –°–≤–æ–∏ –Ω–∞–ø–∏—Ç–∫–∏ –∏ –µ–¥–∞:
       - –ü—Ä–∏–Ω–æ—Å–∏—Ç—å —Å —Å–æ–±–æ–π –Ω–∞–ø–∏—Ç–∫–∏ –∏ –µ–¥—É, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–ª—å–∑—è. –£ –Ω–∞—Å —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –±–ª—é–¥ –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å!

    3. –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
       - –í –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è (–ø–æ—Å–ª–µ 21:00) –≤—Ö–æ–¥ –ª–∏—Ü–∞–º –º–ª–∞–¥—à–µ 18 –ª–µ—Ç –≤–æ—Å–ø—Ä–µ—â–µ–Ω.

    4. –î—Ä–µ—Å—Å-–∫–æ–¥:
       - –ú—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Å—Ç–∏–ª—å–Ω—É—é –∏ –æ–ø—Ä—è—Ç–Ω—É—é –æ–¥–µ–∂–¥—É. –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è.
    """
    await message.answer(rules_text, reply_markup=menu_keyboard)


@router.message(F.text == "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤")
async def book_table(message: Message):
    logging.info("–í—ã–∑–≤–∞–Ω book_table")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞:", reply_markup=table_keyboard())


@router.message(F.text == "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è")
async def send_events(message: Message):
    logging.info("–í—ã–∑–≤–∞–Ω send_events")
    events_text = """
    üéâ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏:

    –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: "–í–µ—á–µ—Ä –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä"
    - –ö—Ä—É—Ç–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –¥–ª—è –∏–≥—Ä —Å —Å–∞–º—ã–º–∏ –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏!

    –°—Ä–µ–¥–∞: "–í–µ—á–µ—Ä –∂–∏–≤–æ–π –º—É–∑—ã–∫–∏"
    - –° 20:00 –¥–ª—è –≤–∞—Å –∏–≥—Ä–∞–µ—Ç –∫–∞–≤–µ—Ä-–≥—Ä—É–ø–ø–∞ "–ó–æ–ª–æ—Ç—ã–µ —Ö–∏—Ç—ã". –í—Ö–æ–¥ —Å–≤–æ–±–æ–¥–Ω—ã–π!

    –ü—è—Ç–Ω–∏—Ü–∞: "–ö–æ–∫—Ç–µ–π–ª—å–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞"
    - –° 22:00 —Å–∫–∏–¥–∫–∞ 50% –Ω–∞ –≤—Å–µ –∫–æ–∫—Ç–µ–π–ª–∏ –≤ –±–∞—Ä–µ!

    –°—É–±–±–æ—Ç–∞: "–Ø–ø–æ–Ω—Å–∫–∏–π —É–∏–∫–µ–Ω–¥"
    - –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤–µ—á–µ—Ä —Å –Ω–∞—à–µ–π —á–∞–π–Ω–æ–π —Ü–µ—Ä–µ–º–æ–Ω–∏–µ–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–æ—Ä—Ç–∞–º–∏ —á–∞—è!

    –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: "–ö–∞—Ä–∞–æ–∫–µ-–Ω–æ—á—å"
    - –° 19:00 –ø–æ–π—Ç–µ –ª—é–±–∏–º—ã–µ –ø–µ—Å–Ω–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–∏–∑—ã!

    –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—à–∏ —è—Ä–∫–∏–µ —Å–æ–±—ã—Ç–∏—è! üéâ
    """
    await message.answer(events_text, reply_markup=menu_keyboard)


@router.message(F.text.in_({"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "vip-1", "vip-2"}))
async def process_table_booking(message: Message):
    logging.info("–í—ã–∑–≤–∞–Ω process_table_booking")
    table_number = message.text
    if table_number in booked_tables:
        await message.answer(f"‚ùå –≠—Ç–æ—Ç —Å—Ç–æ–ª —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.", reply_markup=table_keyboard())
    else:
        booked_tables[table_number] = message.from_user.id
        await message.answer(f"‚úÖ –°—Ç–æ–ª {table_number} —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤–∞—à–µ –∏–º—è!", reply_markup=menu_keyboard)


@router.message(F.text == "/start")
async def start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, –¥–æ—Ä–æ–≥–æ–π –≥–æ—Å—Ç—å! –ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=menu_keyboard
    )

from aiogram import types
from aiogram.types import InputFile
from main import bot, dp, booked_tables

@dp.message_handler(lambda message: message.text == "üìç –ö–∞—Ä—Ç–∞ —Å—Ç–æ–ª–æ–≤")
async def send_table_map(message: types.Message):
    photo = InputFile("images/table_map.jpg")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ö–µ–º—É —Å—Ç–æ–ª–æ–≤
    await bot.send_photo(message.chat.id, photo, caption="–í–æ—Ç —Å—Ö–µ–º–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å—Ç–æ–ª–æ–≤.")

@dp.message_handler(lambda message: message.text == "üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤")
async def book_table(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å:")

@dp.message_handler(lambda message: message.text.isdigit())  
async def process_table_booking(message: types.Message):
    table_number = int(message.text)
    
    if table_number in booked_tables:
        await message.answer("‚ùå –≠—Ç–æ—Ç —Å—Ç–æ–ª —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.")
    else:
        booked_tables[table_number] = message.from_user.id  
        await message.answer(f"‚úÖ –°—Ç–æ–ª {table_number} —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤–∞—à–µ –∏–º—è!")
